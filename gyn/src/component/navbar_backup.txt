.btn-login {
      background-color: #d4edda; /* Light green background */
      color: #000; /* Black text */
      border: none;
      border-radius: 0 25px 25px 0; /* Rounded right */
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .btn-login:hover {
      background-color: #c3e6cb; /* Slightly darker light green on hover */
    }
       .btn-signup {
      background-color: #28a745; /* Green */
      color: white;
      border: none;
      border-radius: 25px 0 0 25px; /* Rounded left */
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .btn-signup:hover {
      background-color: #218838; /* Darker green on hover */
    }
   ================================================================================================== 
.user-role-container {
  display: inline-block;
}

.dropdown-menu {
  position: absolute;
  top: 100%; /* Position below the icon */
  right: 0px; /* Align dropdown to the right */
  background-color: white;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  padding: 10px;
  border-radius: 5px;
  z-index: 1000;
  width: 150px;
  align-items: center;
  align-content: center;
  border-color: #000000a6;
  border-width: 1px;
}


.dropdown-role {
  font-weight: bold;
  margin-bottom: 10px;
  display: inline-block;
  position: relative;
  align-items: center;
  align-content: center;
  color: rgb(4, 4, 193);
  margin-left: 35px;
}

.dropdown-logout {
  display: flex;
  background-color: #d4edda; /* Light green background */
  color: #000; /* Black text */
  border: none;
  border-radius: 0 25px 25px 0; /* Rounded right */
  padding: 10px 20px;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.dropdown-logout:hover {
  background-color: #d7d2d29c;
}
.user-info{
  display: flex;
  background-color: #a5a2a23c;
  width: 41px;
  border-radius: 50px;
  padding: 5px;
  border-color: #8e8d8d91;
  border-width: 1px;
  margin:auto;
}

.user-info:hover{
  background-color: #8a8888fe;
  border-color: #000;
}
===================================================================================================================
import React, { useContext, useState } from 'react';
import { useNavigate, NavLink } from 'react-router-dom';
import '../home.css';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faUser, faBars, faRectangleXmark,faV } from '@fortawesome/free-solid-svg-icons';
import UserPath from './UserPath.jsx';
import { AuthContext } from '../AuthContext.jsx';

const NavBar = () => {
  const { logout } = useContext(AuthContext);
  const navigate = useNavigate();
  const role = localStorage.getItem('role');

  const [showMenu, setShowMenu] = useState(false);
  const [dropdownVisible, setDropdownVisible] = useState(false); 

  const toggleMenu = () => {
    setShowMenu(!showMenu);
  };

  const closeMenu = () => {
    setShowMenu(false);
  };

  const handleLogout = async () => {
    logout();
    navigate('/login');
  };


  const getDisplayRole = (role) => {
    switch (role) {
      case 'consultant':
        return 'Consultant';
      case 'superadmin':
        return 'Super Admin';
      case 'data_entry':
        return 'Data Entry';
      case 'registrar':
        return 'Registrar';
      default:
        return 'User';
    }
  };

  return (
    <header className="header" id="header">
      <nav className="nav">
        <div className={`nav__menu ${showMenu ? 'show-menu' : ''}`} id="nav-menu">
          <ul className="nav__list">
            <li className="nav__item">
              <NavLink exact to={role === "superadmin" ? '/home' : '/backup'} className="nav__link" activeClassName="active" onClick={closeMenu}>
                <span>Home</span>
              </NavLink>
            </li>

            <li className="nav__item">
              <NavLink exact to="/patient_registration" className="nav__link" activeClassName="active" onClick={closeMenu}>
                <span>Patient Registration</span>
              </NavLink>
            </li>

            <li className="nav__item">
              <NavLink exact to="/patients_information" className="nav__link" activeClassName="active" onClick={closeMenu}>
                <span>Patient Information</span>
              </NavLink>
            </li>

            <li className="nav__item">
              <NavLink exact to="/register_staff" className="nav__link" activeClassName="active" onClick={closeMenu}>
                <span>Staff Registration</span>
              </NavLink>
            </li>

            <li className="nav__item">
              <NavLink exact to="/staff_information" className="nav__link" activeClassName="active" onClick={closeMenu}>
                <span>Staff Information</span>
              </NavLink>
            </li>
            {role !== 'data_entry' && (
              <li className="nav__item">
                <NavLink exact to="/analysis" className="nav__link" activeClassName="active" onClick={closeMenu}>
                  <span>Analysis</span>
                </NavLink>
              </li>
            )}
            {role === 'superadmin' && (
              <li className="nav__item">
                <NavLink exact to="/data_export" className="nav__link" activeClassName="active" onClick={closeMenu}>
                  <span>Data Export</span>
                </NavLink>
              </li>
            )}
          </ul>

          <div className="nav__close" id="nav-close" onClick={closeMenu}>
            <FontAwesomeIcon icon={faRectangleXmark} />
          </div>
        </div>
      </nav>

      <nav className="navM">
        <div className="containerN">
          <div className="bar_gyn">
            <FontAwesomeIcon icon={faBars} className="nav__toggle" id="nav-toggle" onClick={toggleMenu} />
            <h1 className="logo">
              <a href="/home" className="a">GYNECOLOGY</a>
            </h1>
          </div>

          <UserPath />
          <ul>
            <li
              className="user-role-container"
              onMouseEnter={() => setDropdownVisible(true)}               
              onMouseLeave={() => setDropdownVisible(false)} 
              style={{ position: 'relative' }} >

              <div className="user-info">
                <FontAwesomeIcon icon={faUser} className="user" />
                {/* <FontAwesomeIcon icon={faV} />  */}
              </div>

                <button onClick={handleLogout} className="dropdown-logout">
                  Logout
                </button>
              {dropdownVisible && (
                <div className="dropdown-menu">
                  <span className="dropdown-role">{getDisplayRole(role)}</span>
                </div>
              )}
            </li>
          </ul>
        </div>
      </nav>
    </header>
  );
};

export default NavBar;
